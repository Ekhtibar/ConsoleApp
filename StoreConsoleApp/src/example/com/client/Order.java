package example.com.client;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;

public class Order {
    public void addProductToOrder() {
        ArrayList<String> products = new ArrayList<>();
        
        try (BufferedReader reader = new BufferedReader(new FileReader("C://Users//–≠—Ö—Ç–∏–±–∞—Ä//Downloads//products.txt"))) {
            String line;
            while ((line = reader.readLine()) != null) {
                products.add(line);
            }
        } catch (IOException e) {
            System.out.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: " + e.getMessage());
            return;
        }

        if (products.isEmpty()) {
            System.out.println("–°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø—É—Å—Ç.");
            return;
        }

        System.out.println("üìù –°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É: ");
        for (int i = 0; i < products.size(); i++) {
            String[] data = products.get(i).split(",");
            if (data.length == 4) {
                String prodName = data[0];
                double prodPrice = Double.parseDouble(data[1]);
                String prodDesc = data[2];
                String prodCategory = data[3];
                System.out.println("[" + (i + 1) + "] –ù–∞–∑–≤–∞–Ω–∏–µ: " + prodName + ", –¶–µ–Ω–∞: " + prodPrice +
                                   ", –û–ø–∏—Å–∞–Ω–∏–µ: " + prodDesc + ", –ö–∞—Ç–µ–≥–æ—Ä–∏—è: " + prodCategory);
            }
        }

        Scanner scan = new Scanner(System.in);
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—Ä–æ–¥—É–∫—Ç–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É: ");
        int productNumber = scan.nextInt();
        scan.nextLine();

        if (productNumber < 1 || productNumber > products.size()) {
            System.out.println("–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –ø—Ä–æ–¥—É–∫—Ç–∞.");
            return;
        }

        String selectedProduct = products.get(productNumber - 1);

        try (BufferedWriter writer = new BufferedWriter(new FileWriter("C://Users//–≠—Ö—Ç–∏–±–∞—Ä//Downloads//order.txt", true))) {
            writer.write(selectedProduct);
            writer.newLine();
            System.out.println("–ü—Ä–æ–¥—É–∫—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É: " + selectedProduct);
        } catch (IOException e) {
            System.out.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É: " + e.getMessage());
        }
    }
    
    public void orderList() {
        ArrayList<String> orders = new ArrayList<>();

        // –°—á–∏—Ç—ã–≤–∞–µ–º –∑–∞–∫–∞–∑—ã –∏–∑ —Ñ–∞–π–ª–∞
        try (BufferedReader reader = new BufferedReader(new FileReader("C://Users//–≠—Ö—Ç–∏–±–∞—Ä//Downloads//order.txt"))) {
            String line;
            while ((line = reader.readLine()) != null) {
                orders.add(line);
            }
        } catch (IOException e) {
            System.out.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–æ–≤: " + e.getMessage());
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–∫–∞–∑—ã
        if (orders.isEmpty()) {
            System.out.println("–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.");
            return;
        }

        // –í—ã–≤–æ–¥–∏–º –∑–∞–∫–∞–∑—ã –≤ –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ
        System.out.println("üìù –°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤: ");
        for (int i = 0; i < orders.size(); i++) {
            String[] data = orders.get(i).split(",");
            if (data.length == 4) {
                String prodName = data[0];
                double prodPrice = Double.parseDouble(data[1]);
                String prodDesc = data[2];
                String prodCategory = data[3];
                System.out.println("[" + (i + 1) + "] –ù–∞–∑–≤–∞–Ω–∏–µ: " + prodName + ", –¶–µ–Ω–∞: " + prodPrice +
                                   ", –û–ø–∏—Å–∞–Ω–∏–µ: " + prodDesc + ", –ö–∞—Ç–µ–≥–æ—Ä–∏—è: " + prodCategory);
            }
        }
    }
}